// gulpプラグインの読み込み

var gulp = require('gulp');
var postcss = require('gulp-postcss');
var notify = require("gulp-notify"); // エラー時の通知
var autoprefixer = require("gulp-autoprefixer"); //Sassにベンダープレフィックスをつける
var plumber = require('gulp-plumber'); // エラーでもファイル監視(watch)を続ける
var uglify = require('gulp-uglify'); //JSの圧縮
var replace = require('gulp-replace');//置換
var changedInPlace = require('gulp-changed-in-place');//変更した場合のみ処理

//var browserSync = require('browser-sync').create()
//var babelify = require('babelify');
//var browserify = require('browserify');
//var buffer = require('vinyl-buffer');
//var source = require('vinyl-source-stream');
//var sourcemaps = require('gulp-sourcemaps');
//var uglify = require('gulp-uglify');
//var destDir = './public'  // 出力先
//
//
////ES6変換
//gulp.task('es6', () => {
//  browserify({entries: 'src/main.js', debug: true})
//    .transform(babelify)
//    .bundle()
//    .on('error', err => console.log('Error : ' + err.message))
//    .pipe(source('main.js'))
//    .pipe(buffer())
//    .pipe(sourcemaps.init({loadMaps: true}))
//    .pipe(uglify())
//    .pipe(sourcemaps.write('./'))
//    .pipe(gulp.dest(destDir))
//    .pipe(browserSync.reload({stream: true}))
//})

//scssにベンダープレフィックスをつけて圧縮してコンパイル
//gulp.task('scss', function() {
//    gulp.src('./scss/**/*.scss')
//        .pipe(plumber())
//        .pipe(autoprefixer({ // ベンダープレフィックスの付与
//            browsers: ['last 3 version', 'ie >= 10','iOS >= 9.3', 'Android >= 4.4'], // (ベンダープレフィックスを付与する)対応ブラウザの指定
//            cascade: false // 整形しない
//        }))
//        .pipe(sass({outputStyle: 'expanded'}))
//        .pipe(gulp.dest('./css')); // cssディレクトリに書き出す
//});


//css 圧縮
//gulp.task('minify-css', () => {
//  return gulp.src('css/*.css')
//    .pipe(cleanCSS({ /*オプション指定可能*/ }))
//    .pipe(gulp.dest('dist'));
//});

//jsを圧縮
gulp.task('js', function() {
    //実行するファイル
    gulp.src('./js/**.js')
        //pipeでつなぐ
        .pipe(plumber())//エラーでもファイル監視継続watch
        .pipe(uglify())// 圧縮
        .pipe(gulp.dest('./js/min'));//圧縮したファイルを出力
});


//HTMLファイルのビルド（タイムスタンプをパラメーターとして付与、置換する）
gulp.task('build', function() {
    ts = Date.now();
    //実行するファイル
    gulp.src(['./**/*.html','!./build/*'])
        //pipeでつなぐ
        .pipe(plumber())//エラーでもファイル監視継続watch
        .pipe(changedInPlace())
        .pipe(replace(/__NOCACHE__/g, ts))//置換
        .pipe(gulp.dest('./build'));//ディレクトリに書き出す
});


// 自動監視化
gulp.task('watch', function(){
    gulp.watch('./scss/**/*.scss',{interval: 500}, ['scss']);
    gulp.watch('./css/*.css',{interval: 500}, ['minify-css']);
    gulp.watch('./js/**/*.js', {interval: 500}, ['js']);
    gulp.watch('./**/*.htm*', {interval: 500}, ['build']);
});

gulp.task('default', ['watch']);

